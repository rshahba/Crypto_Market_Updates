// Code generated by MockGen. DO NOT EDIT.
// Source: client/client_interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockResponseFormat is a mock of ResponseFormat interface.
type MockResponseFormat struct {
	ctrl     *gomock.Controller
	recorder *MockResponseFormatMockRecorder
}

// MockResponseFormatMockRecorder is the mock recorder for MockResponseFormat.
type MockResponseFormatMockRecorder struct {
	mock *MockResponseFormat
}

// NewMockResponseFormat creates a new mock instance.
func NewMockResponseFormat(ctrl *gomock.Controller) *MockResponseFormat {
	mock := &MockResponseFormat{ctrl: ctrl}
	mock.recorder = &MockResponseFormatMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResponseFormat) EXPECT() *MockResponseFormatMockRecorder {
	return m.recorder
}

// GetUrlStr mocks base method.
func (m *MockResponseFormat) GetUrlStr(url string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUrlStr", url)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUrlStr indicates an expected call of GetUrlStr.
func (mr *MockResponseFormatMockRecorder) GetUrlStr(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUrlStr", reflect.TypeOf((*MockResponseFormat)(nil).GetUrlStr), url)
}
